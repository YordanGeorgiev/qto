   Vue.component('editable', {
     template: `<div v-bind:id="id" class="cls_cnt_edtble" contenteditable="true" @blur="emitChange" 
               v-on:focus="focused" v-on:keyup.esc="revertChange()">{{ content }}</div>`,
     props: {
		content: {
			twoWay: true
		}
		, id: {}
	  },
     oldData: "",
     watch: {
        content: function () {
            this.$el.innerText = "" ? this.content === 'null' : this.$el.innerText = this.content;
            this.$el.innerText = "" ? this.content === null : this.$el.innerText = this.content;
            this.$el.innerText = "" ? typeof(content) === 'undefined'  : this.$el.innerText = this.content;
            console.log (' whatched called ');
            if ( typeof this.content === 'udefined' || this.content === 'null' ) {
               this.$el.innerText = ""
            }
        }
     },
     mounted() {
        this.content === 'null' ? this.$el.innerText = "" : this.$el.innerText = this.content;
        // todo:ysg
        console.log("mounted called");
     },
     methods: {
       focused(ev) {
         this.oldData = ev.target.textContent;
       }
       , emitChange (ev) {
			  this.$emit('update', ev.target.innerText,ev.target.id,this.oldData) // parent's job !!!
            // todo:ysg
            console.log("emitChange called");
            console.log ( 'this.$el.innerText' + this.$el.innerText ) ;
            console.log ( 'this.content : ' + this.content ) 
            // this.$el.innerText = "" ? this.content === 'null' : this.$el.innerText = this.content;
           //ev.preventDefault() //it-180925092952 !!!
       }
       , revertChange() {
     		  this.$el.innerText = this.oldData ; 
       }
     }
   })
