   Vue.component('editable', {
     template: `<textarea v-bind:id="id" class="cls_cnt_edtble" @blur="emitChange" v-bind:title="content" v-model="cnt"
               v-on:focus="focused" v-bind:style="'width: ' + calcWidth() + 'em'" v-on:keyup.esc="revertChange()">{{ content }}</textarea>`,
     props: {
		   id: {}
         , cnt: {
            twoWay: true
            , default: ""
         }
	  }
     , data() {
         return {
            cntz: ""
            , content: this.cnt
         }
	  }
     , oldData: ""
     , computed: {
    }
     , mounted() {
         this.content = this.cnt
         this.displayEmptyCellIfNullOrUndefined()
     },
     methods: {
       displayEmptyCellIfNullOrUndefined() {
            if ( typeof this.content == "undefined" || this.content === 'null' || this.content == null) {
               this.$el.innerText = " "
               this.content = " "
            }
       }
      , focused(ev) {
         this.oldData = ev.target.value
       }
       , emitChange (ev) {
           var modifiedContent = ev.target.value
			  this.$emit('update', modifiedContent ,ev.target.id,this.oldData) // parent's job !!!
           this.displayEmptyCellIfNullOrUndefined()
       }
       , revertChange() {
     		  this.$el.innerText = this.oldData ; 
           this.displayEmptyCellIfNullOrUndefined()
       }
       , calcWidth() {
            var width = 0
            if ( typeof this.content != undefined && this.content != null) {
               width = this.content.toString().length
               if ( width < 5 ) {
                  return width 
               } else if ( width > 4 && width < 16 ) {
                  return 7
               } else if ( width > 15 && width < 35 ) {
                  return 9
               } else if ( width > 34 && width < 60 ) {
                  return 13
               } else if ( width > 59 && width < 90 ) {
                  return 17
               } else  {
                  return 26
               }
            } else {
                  return 3
            }
     		}
		}
   })
