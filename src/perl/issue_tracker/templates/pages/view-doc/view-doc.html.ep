%layout 'view';

% content_for cnt_header_css => begin
  <title> view <%= " $item " =%>  <%= "as $as in " =%> <%= "$db " =%> </title> 
   <link rel="stylesheet" type="text/css" media="screen"  
      href="../../themes/thme-blue/css/screen/controls/view-doc.css?v=<%= $ProductVersion =%>" />
% end


% content_for cnt_body_controls  => begin
   <div id="div_central_panel">
      <div class="container">
         <div id="div_open_rgt_menu" onclick="openRightMenu()"> â˜° </div>
         <div id="app"></div>
      </div>

      %= include 'components/view-doc-items-list.xt'
      %= include 'components/app-template.xt'
   </div>
% end


% content_for cnt_all_js => begin

   <script id="all_js_scripts">

   function getUrlParams (){
      var url_params = new URLSearchParams();
      if( window.location.toString().indexOf("?") != -1) {
         var href_part = window.location.search.split('?')[1]
         href_part.replace(/([^=&]+)=([^&]*)/g, 
            function(m, key, value) {
               var attr = decodeURIComponent(key)
               var val = decodeURIComponent(value)
               url_params.append(attr,val);
         });
      } 
      
      if ( url_params.has("as") === false) { url_params.append("as" , "doc"); }
      
      //debug for(var pair of url_params.entries()) { consolas.log(pair[0]+ '->'+ pair[1]); }
      return url_params ; 
   }

   var state = {
      items: []
    };

   var getters = {
      getItems: state => state.items
   }

    var mutations = {
           ADD_ITEM: (state, payload) => {
               var newItem = {
                   id: payload.newId,
                   name: payload.name,
                   completed: false
               }
               state.items.unshift(newItem);
           },
           SET_ITEMS (state, items) {
               state.items = items
           },
           TOGGLE_ITEM: (state, payload) => {
               var item = state.items.find(todo => todo.id === payload);
               item.completed = !item.completed;
           },
           DELETE_ITEM: (state, payload) => {
               var index = state.items.findIndex(todo => todo.id === payload);
               state.items.splice(index, 1);
           }
    };

    var actions = {
         loadItems ({ commit }) {
            var url_params = getUrlParams()  
            axios
               .get((window.location.pathname).replace("/view/" , "/hselect/") , { params: url_params })
               .then(r => r.data.dat) 
               .then(items => {
                  commit('SET_ITEMS', items)
               })
         },
         addItem: (context, payload) => {
            context.commit("ADD_ITEM", payload)
         },
         toggleItem: (context, payload) => {
            context.commit("TOGGLE_ITEM", payload)
         },
         deleteItem: (context, payload) => {
            context.commit("DELETE_ITEM", payload)
         }
   }

    var store = new Vuex.Store({
           state: state,
           getters: getters,
           mutations: mutations,
           actions: actions
       });


   const ViewDocItemsList = Vue.component("view-doc-items-list", {
      computed: {
         items() {
            return this.$store.getters.getItems;
         }
       },
      methods: {
         toggleItem: function(id) {
            this.$store.dispatch("toggleItem", id);
         },
         deleteItem: function(id) {
            this.$store.dispatch("deleteItem", id);
         }
      },
      template: "#view-doc-items-list"
   });
      

   var app = new Vue({
         store: store
         , data: () => ({})
         , el: "#app"
         , components: {
            'view-doc-items-list': ViewDocItemsList
         }
         , template: "#app-template"
         , created: function () {
            this.$store.dispatch('loadItems')
         }
         , methods: {
            addItem: function() {
               this.$store.dispatch("addItem", this);
               this.newId ++;
               this.name = "";
               }
           },
       });
      

      function openRightMenu() {
        document.getElementById("rgt_menu").style.width = "27%";
      }

      function closeRightMenu() {
        document.getElementById("rgt_menu").style.width = "0";
      }

   </script>
% end
