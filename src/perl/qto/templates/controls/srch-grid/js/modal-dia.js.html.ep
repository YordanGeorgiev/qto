Vue.component('modal', {
	  template: '#modal-tmpl'
	, props: ['field']
	, data: function() {
		return {
			showModal: false
			, cnt: ''
			, cid: ''
			, itemId: null
			, itemData: null
         , count:0
         , lnkOpen: null 
		}
	}
	, mounted () {
      this.itemId = this.$attrs.id.replace("dia-","")
      this.itemData = this.$parent.data.find(obj => obj.id == this.itemId )
      this.cnt = this.toTable()

      var id=this.$attrs.id.replace('dia-','')
      var item = this.itemData.item
      var db = window.location.pathname.split('/')[1]
      if ( item.endsWith("_doc" )) {
         this.lnkOpen = "/" + db + '/view/' + item + '#' + item + "-" + id
      } else {
         this.lnkOpen = "/" + db + '/list/' + item + '?&with=id-eq-' + id + '&open=' + id
      }
	}
	, updated() {
        if ( this.count == 0 ) {
           document.getElementById("modal-dia-title-id").focus()
           document.getElementById("modal-dia-title-id").click()
           this.count++
        }
	}
	, methods: {
      toTable: function() {
         var html = '<div>';
         var oprops = ['id','item','name','description','relevancy','guid']
         oprops.map(oprop => {
               for (const prop in this.itemData) {
                  if ( oprop !== prop ) { continue; }
                  html += '<div tabindex="0">';
                  if (this.itemData.hasOwnProperty(prop)) {
                    html += '<div class="cls-srch-modal-dia-title"><p><b>' + prop + '</b></p></div>'+ this.itemData[prop] + '</div>'
                  }
               }
               html += '</div>';
         })
         html += '</div>';
         return html
      }
	}
})
