   var left_menu = new Vue({
      el: '#lft_menu',
      template: `
         <ol id="left_menu" class="tree"> 
            <div id="div_logout"><a alt="logout" tabindex="1" href="/<%= $pdb =%>/logon">
               <img loading="lazy" alt="logout" src="../../themes/thme-blue/img/controls/logout.png" /></a>
            </div>
            <div style="margin-top:7%" v-html='buildMenu' @click="handleClick($event)" v-on:keyup.enter="onEnter"/>
            <div id="app_label">
               <p><%= " $db" =%><%= " $ProductVersion " =%> <%= " $EnvType " =%><%= " $GitShortHash " =%> @<%= " $page_load_time " =%></p>
            </div>
         </ol>
      `
      , data: {
         menuData: [],
         chksState: {}
	   }
     	, computed: {
        buildMenu: function(){
            this.chksState = JSON.parse(localStorage.getItem('chksState')) || {}
            var i
            var html=" "
            var prev_lvl = 0
            for (i = 0; i < this.menuData.length; i++) {
               let itm = this.menuData[i]
               if ( itm.level === 0 ) { continue ; }
               var curr_lvl = itm.level
               if (itm.type === 'folder') {
                     if ( prev_lvl != 0 && prev_lvl > itm.level) {
                        html += this.closeFolderLink(itm)
                     }
                     html += this.openFolderLink(itm);
                  } else if ( itm.type === 'doc') {
                     html += this.buildDocLink(itm);
                  } else {
                     html += ''
                  }
                  prev_lvl = itm.level
            }
            return html
        } 
     }
     	, methods: {
         menuDataLoaded: function(menuData) {
            this.menuData = menuData
        } 
        , openFolderLink: function(itm) {
            var eid = 'lfcb-'+String(itm.id)
            var checkedMayBe = (typeof(this.chksState[eid]) === 'undefined') ? false : this.chksState[eid]
            var checkedMayBeStr = (checkedMayBe) ? 'checked' : ''
            var html='<li><label class="cls-lft-mnu-lbl" for="' + itm.id + '"><a id="' + 'lmfal-' + itm.id + '" class="cls_fa" href="#">'
            html += itm.name + '</a></label><input class="lmfi" tabindex="1" type="checkbox" ' + checkedMayBeStr + ' id="lfcb-' 
            html += itm.id + '" /><ol><li>'
            return html
        } 
        , handleClick: function(e) {
            e.stopPropagation
            if (String(e.target.className) === 'cls-lft-mnu-lbl' || String(e.target.className) === 'cls_fa') {
               var cheid = String(e.target.id).replace('lmfal-','lfcb-')
               document.getElementById(cheid).click()
            }
            if (String(e.target.className) === 'lmfi') {
               console.log("handleClick lmfi")
               var cheid = String(e.target.id)
               this.chksState = JSON.parse(localStorage.getItem('chksState')) || {}
               this.chksState[cheid] = (typeof(this.chksState[cheid]) === 'undefined') ? false : this.chksState[cheid]
               this.chksState[cheid] = !this.chksState[cheid]
               document.getElementById(cheid).focus()
               localStorage.setItem('chksState',JSON.stringify(this.chksState))
            }
        }
        , onEnter: function(e) {
            e.stopPropagation
            if (String(e.target.className) === 'cls-lft-mnu-lbl' || String(e.target.className) === 'cls_fa') {
               var theChck = e.target.parentElement.parentElement.getElementsByTagName('input')[0]
               document.getElementById(theChck.id).click()
            }
        }
        , closeFolderLink: function(itm) {
            if ( itm.id == 0 ) { return ' ' }
            return '</ol></li>'
        } 
        , buildDocLink: function(itm) {
            var url = window.location.href.split('?')[0]
            var db = '<%= $db =%>'
            var pdb = db.replace(/dev_|tst_|qas_|prd_/g,'')
            url = url.split('/')[0] + "//" + url.split('/')[2] + '/' + pdb + '/'
            return '<li class="file"><a class="cls_da" href="' + url + itm.url + '">' + itm.name + '</a></li>' ;
        } 
        , handleClckOutOfLftMnu(e) {
            var el=e.target
            console.log("handleClckOutOfLftMnu")
            var div_lft_mnu = document.getElementById("div_left_menu")
            console.log(el)
            console.log("el")
            if (div_lft_mnu.contains(el) === false && el.id !== 'chk_left_menu' && el.className !== 'cls_fa' && el.className !== 'lmfi'){
               console.log("should click")
               var left_menu_checkbox = document.getElementById("chk_left_menu")
               if ( left_menu_checkbox.checked === true) { //lft mnu is open
                  left_menu_checkbox.click() //close it
               }
            }
        }
     }
     , mounted() {
         this.$nextTick(() => {
            bus.$on('metaTablesLoadEmit',this.menuDataLoaded)
            document.addEventListener("click", this.handleClckOutOfLftMnu);
         })
     }
     , destroyed() {
         document.removeEventListener("click", this.handleClckOutOfLftMnu);
     }
   });
