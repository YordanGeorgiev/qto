use strict ; use warnings ; 

use Test::Most ; 
use Test::Mojo;
use Data::Printer ; 
use FindBin;

die_on_fail ; 

BEGIN { unshift @INC, "$FindBin::Bin/../../../../../qto/lib" }
   $ENV{'QTO_NO_AUTH'} = 1;

   my $tm = '' ; # the test message for each test 
   my $t = Test::Mojo->new('Qto');
   my $config = $t->app->config ; 
   
   my $ua = {} ;                                # the mojo user agent 
   my $dom = {} ;                                # the mojo dom parser 
   my $url = {} ;                                # the url to build for each test 
   my $exp_txt = {} ;                            # the expected text to check 
   my $response = {} ; 
   my @web_actions = ('list','view');
 
   foreach my $web_action ( @web_actions ) {
      # debug p $t->ua->get($url)->result->body ; 
      # this needs to be asyncrounous with using client code as well ...
      my $env = $config->{'env'}->{'run'}->{'ENV_TYPE'} ; 
      my $db  = $config->{'env'}->{'db'}->{ 'postgres_db_name' } ; # because each instance has it's own ...

      $tm = "$web_action userstories product_type: $env " ; 
      $url = '/' . $db . '/' . $web_action . '/userstories' ; 

      $dom = Mojo::DOM->new($t->ua->get($url)->result->body) ; 
      p $dom ; 
      ok ( $dom->find('div')->[1] =~ m/$env/ , $tm ) ;

      my $GitShortHash = $config->{'env'}->{'run'}->{ 'GitShortHash' } ; 
      $tm = "the app label contains the short git hash of this product instance: $GitShortHash" ; 
      ok ( $dom->find('div')->[1] =~ m/$GitShortHash/ , $tm ) ;
     
      my $ProductVersion = $config->{'env'}->{'run'}->{'VERSION'} ;
      $tm = "$web_action userstories product version of this product instance: $ProductVersion " ; 
      ok ( $dom->find('div')->[1] =~ m/$ProductVersion/ , $tm ) ;
   }

done_testing();

